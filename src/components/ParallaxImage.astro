---
/// Based on https://wp-tutorials.tech/refine-wordpress/parallax-image-scrolling-effect/.

interface Props {
    relativeSrc: string;
    heading?: string;
    description?: string;
    height?: string;
    id?: string;
}

import ParallaxFadeIn from "@components/ParallaxFadeIn.astro";
import RelativeSrcImage from "@components/RelativeSrcImage.astro";

import { getLangFromUrl, useTranslations } from '@i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

let { relativeSrc, heading, description, height = "100vh", id } = Astro.props;

// Make sure the ID doesn't start with a number.
if (!id) {
    while (!id || /^\d/.test(id)) {
        id = Math.random().toString(36).slice(2, 11)
    }
}
---

<div class="parallax-img-container" style={`height: ${height};`}>
    <RelativeSrcImage id={id} classes={`parallax-img ${(description) && "parallax-img-filter"}`} relativeSrc={relativeSrc} alt={heading || t("site.name")} />

    <ParallaxFadeIn>
        {(heading) && <h1 class="parallax-heading">{heading}</h1>}
        {(description) && <p class="parallax-description">{description}</p>}
    </ParallaxFadeIn>
</div>

<style lang="less">
    .parallax-img-container {
        position: relative;
    }

    :global(.parallax-img) {
        height: 100%;
        width: 100vw;
        object-fit: cover;
    }
    :global(.parallax-img-filter) {
        filter: brightness(80%) saturate(120%);
    }

    .parallax-heading {
        position: absolute;
        top: 25%;
        left: 10%;
        max-width: 80%;

        margin: 0;

        font-weight: bold;
        color: var(--white-bg);
        filter: drop-shadow(2px 9px 2px rgba(0, 0, 0, .25));
    }

    .parallax-description {
        position: absolute;
        top: 45%;
        left: 10%;
        width: 60ch;
        max-width: 80%;

        margin: 0;

        color: var(--white-bg);
        font-size: 1.5rem;
        filter: drop-shadow(1px 5px 2px rgba(0, 0, 0, .50));

        @media (max-width: 700px) {
            font-size: 1.25rem;
        }
    }
</style>

<script is:inline define:vars={{id}}>
    function main() {
        const image = document.querySelector(`#${id}`);
        if (!image) return;

        setImageScrollPercentage(image);

        // Listen for window-resize and document-scroll events.
        window.addEventListener('resize', function() {
            setImageScrollPercentage(image);
        });
        document.addEventListener('scroll', function() {
            setImageScrollPercentage(image);
        });

        // Given an image, find out whether it's near the top or the
        // bottom of the window and set the image's object-position
        // CSS property accordingly.
        function setImageScrollPercentage(image) {
            // The on-screen rectangle made by the IMG element.
            const rect = image.getBoundingClientRect();

            const imageAspectRatio = image.naturalWidth / image.naturalHeight;
            const imageHeight = rect.width / imageAspectRatio;

            var viewableRegion = window.innerHeight - rect.height;
            if (imageHeight > viewableRegion) {
                viewableRegion = imageHeight - rect.height;
            }

            const objectVerticalOffset = Math.round(1000 * rect.top / viewableRegion) / 10.0;
            image.style.objectPosition = `0 ${50+objectVerticalOffset}%`;
        }
    }

    main();
</script>
