---
import fs from 'fs';
import yaml from 'js-yaml';

interface Room {
    name: Record<string, string>;
    capacity: Record<string, string>;
    rooms: Record<string, string>;
    bed: Record<string, string>;
    images: string[];
}
interface RoomsPage {
    welcomeImage: string;
    breakfastImage: string;
    rooms: Room[];
}

let roomsPage: RoomsPage | undefined = undefined;
try {
    roomsPage = yaml.load(fs.readFileSync('oreste/rooms.yaml', 'utf8')) as RoomsPage;
} catch (e) {
    console.log(e);
    throw e;
}

import Layout from "@layouts/Layout.astro";

import FadeIn from "@components/FadeIn.astro";
import FormatText from "@components/FormatText.astro";
import ImageCarousel from "@components/ImageCarousel.astro";
import ParallaxImage from "@components/ParallaxImage.astro";
import PageSection from "@components/PageSection.astro";
import RelativeSrcImage from "@components/RelativeSrcImage.astro";

import { getLangFromUrl, useTranslations, useDataTranslations } from '@i18n/utils';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const { d } = useDataTranslations(lang);
---

<Layout title={t("rooms.title")} description={t("rooms.description")}>
    <div class="rooms-top-spacer"></div>
    <ParallaxImage relativeSrc={roomsPage.welcomeImage} heading={t("rooms.welcome.header")} description={t("rooms.welcome")} height="60vh" />

    <PageSection>
        <FadeIn>
            <h2>{t("rooms.description.header")}</h2>
            <p>{t("rooms.description")}</p>
        </FadeIn>
    </PageSection>

    {roomsPage.rooms.map((room, index) => (
        <PageSection>
            <FadeIn>
                <div class="columns-rooms" data-reverse={(index % 2 == 1) ? "yes" : "no"} >
                    <div class="column-images">
                        <ImageCarousel images={room.images} name={d(room.name)!} />
                    </div>

                    <div class="column-details">
                        <h3><FormatText text={d(room.name)!} /></h3>

                        <p class="header-text small-text">{t("rooms.capacity")}</p>
                        <p class="detail-text small-text"><FormatText text={d(room.capacity)!} /></p>
                        <p class="header-text small-text">{t("rooms.rooms")}</p>
                        <p class="detail-text small-text"><FormatText text={d(room.rooms)!} /></p>
                        <p class="header-text small-text">{t("rooms.bed")}</p>
                        <p class="detail-text small-text"><FormatText text={d(room.bed)!} /></p>
                    </div>
                </div>
            </FadeIn>
        </PageSection>
    ))}

    <div class="columns-breakfast">
        <div class="column-breakfast-images">
            <RelativeSrcImage relativeSrc={roomsPage.breakfastImage} alt="Breakfast" />
        </div>

        <div class="column-breakfast-details">
            <h2>{t("rooms.breakfast.header")}</h2>
            <p>{t("rooms.breakfast")}</p>
        </div>
    </div>
</Layout>

<style lang="less">
    /* Synced with navbar-container-outer */
    .rooms-top-spacer {
        margin-top: 5rem;

        @media (max-width: 700px) {
            margin-top: 4rem;
        }
    }

    .columns-rooms {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        gap: 2rem;

        &[data-reverse="yes"] {
            flex-direction: row-reverse;
        }

        @media (max-width: 700px) {
            flex-direction: column !important;
            row-gap: 3rem;
        }

        h3 {
            max-width: 75%;
            margin: auto;
            margin-bottom: 1rem;
        }
    }
    .column-images {
        flex: 0.55;

        width: 100%;
    }
    .column-details {
        flex: 0.45;

        text-align: center;
        max-width: 80%;
    }

    .columns-breakfast {
        display: flex;
        flex-direction: row;
        align-items: stretch;

        margin-top: 8rem;

        @media (max-width: 700px) {
            margin-top: 6rem;
        }

        @media (max-width: 700px) {
            flex-direction: column-reverse !important;
        }
    }
    .column-breakfast-images {
        flex: 0.5;

        :global(img) {
            width: 100%;
            height: 100%;

            object-fit: cover;
        }
    }
    .column-breakfast-details {
        flex: 0.5;

        padding: 2rem;

        background-color: var(--gray-bg);

        p {
            max-width: 95%;
        }
    }

    .header-text {
        margin-top: 1rem;
        font-weight: 400;

        color: var(--blue);
    }
    .detail-text {
        margin: 0;

        font-weight: 300;
    }
</style>

<script>
</script>
